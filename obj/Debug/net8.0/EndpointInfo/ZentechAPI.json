{
  "openapi": "3.0.1",
  "info": {
    "title": "Zentech API",
    "description": "API documentation for Zentech application",
    "version": "v1"
  },
  "paths": {
    "/api/Category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Récupérer toutes les catégories.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Ajouter une nouvelle catégorie.",
        "requestBody": {
          "description": "Objet contenant les détails de la catégorie à ajouter.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Récupérer une catégorie par son ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant unique de la catégorie.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Mettre à jour une catégorie existante.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la catégorie à mettre à jour.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Objet contenant les informations mises à jour de la catégorie.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Supprimer une catégorie.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la catégorie à supprimer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Contact": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Retrieve all contact requests.",
        "description": "This endpoint returns the complete list of contact requests.\r\nAccessible only to administrators.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create a new contact request.",
        "requestBody": {
          "description": "Object containing the details of the contact request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Contact/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Retrieve a contact request by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact request.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Update an existing contact request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact request to be updated.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Object containing the updated information of the contact request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Delete a contact request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact request to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/News": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Retrieve all news.\r\nAccessible only to users with the \"Admin\" role.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Add a new news item.\r\nAccessible only to users with the \"Admin\" role.",
        "requestBody": {
          "description": "The news data to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/News/{id}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Retrieve a specific news item by ID.\r\nAccessible only to users with the \"Admin\" role.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the news item to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "News"
        ],
        "summary": "Update an existing news item.\r\nAccessible only to users with the \"Admin\" role.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the news item to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated news data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/News"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "News"
        ],
        "summary": "Delete a news item.\r\nAccessible only to users with the \"Admin\" role.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the news item to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/News/{newsId}/photos": {
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Add a photo to a news item.\r\nAccessible only to users with the \"Admin\" role.",
        "parameters": [
          {
            "name": "newsId",
            "in": "path",
            "description": "The ID of the news item.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The URL of the photo to add.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/News/photos": {
      "delete": {
        "tags": [
          "News"
        ],
        "summary": "Delete a photo from a news item.\r\nAccessible only to users with the \"Admin\" role.",
        "requestBody": {
          "description": "The URL of the photo to delete.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products.",
        "description": "This endpoint returns the complete list of available products.\r\nAccessible without authentication.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Add a new product.",
        "requestBody": {
          "description": "Object containing the details of the product to be added.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get a product by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique product identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update an existing product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Object containing the updated product information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Products/{productId}/photos": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Add a photo to a product.\r\nAccessible only to users with the \"Admin\" role.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The product ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The URL of the photo to add.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Products/photos": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a photo from a product.\r\nAccessible only to users with the \"Admin\" role.",
        "requestBody": {
          "description": "The URL of the photo to delete.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User registration.",
        "description": "This endpoint creates a new user by providing a full name, email, and password.\r\nThe password is encrypted before being saved to the database.",
        "requestBody": {
          "description": "The information of the user to register.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User authentication.",
        "description": "This endpoint allows a user to log in by providing their email and password.\r\nThe password is compared with the one stored in the database.",
        "requestBody": {
          "description": "The login information of the user.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve a user by their ID.",
        "description": "This endpoint returns the detailed information of a specific user.\r\nAccessible only by administrators.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update a user.",
        "description": "Allows updating the information of an existing user.\r\nEnsure that the ID matches the one provided in the request body.\r\nAccessible only by administrators.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated information of the user.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user.",
        "description": "Deletes an existing user by their ID.\r\nAccessible only by administrators.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve all users.",
        "description": "Returns the complete list of users registered in the system.\r\nAccessible only by administrators.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{id}/role/{roleName}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Check if a user belongs to a role.",
        "description": "Checks if a user has a specific role.\r\nAccessible only by administrators.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "The name of the role to check.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/roles": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve all roles.",
        "description": "Returns the list of roles available in the system.\r\nAccessible only by administrators.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "categoryID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactMessage": {
        "type": "object",
        "properties": {
          "contactID": {
            "type": "integer",
            "format": "int32"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "News": {
        "type": "object",
        "properties": {
          "newsID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Product": {
        "type": "object",
        "properties": {
          "productID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "categoryID": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Role": {
        "type": "object",
        "properties": {
          "roleID": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "roleID": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please enter JWT with Bearer in front of the token",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}