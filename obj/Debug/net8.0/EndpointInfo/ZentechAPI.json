{
  "openapi": "3.0.1",
  "info": {
    "title": "Zentech API",
    "description": "API documentation for Zentech application",
    "version": "v1"
  },
  "paths": {
    "/api/Category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Retrieve all categories.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Add a new category.",
        "requestBody": {
          "description": "Object containing the details of the category to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Retrieve a category by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the category.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Update an existing category.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the category to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Object containing the updated information of the category.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Delete a category.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the category to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/CompanyInformation": {
      "get": {
        "tags": [
          "CompanyInformation"
        ],
        "summary": "Get all company information.",
        "responses": {
          "200": {
            "description": "Returns the list of all companies"
          },
          "404": {
            "description": "No companies found"
          }
        }
      },
      "post": {
        "tags": [
          "CompanyInformation"
        ],
        "summary": "Add a new company information.",
        "requestBody": {
          "description": "The company to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyInformation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyInformation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Company successfully created"
          },
          "400": {
            "description": "Invalid company data"
          }
        }
      }
    },
    "/api/CompanyInformation/{id}": {
      "get": {
        "tags": [
          "CompanyInformation"
        ],
        "summary": "Get company information by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the company",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the company with the specified ID"
          },
          "404": {
            "description": "Company not found"
          }
        }
      },
      "put": {
        "tags": [
          "CompanyInformation"
        ],
        "summary": "Update existing company information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the company",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The company data to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyInformation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyInformation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Company successfully updated"
          },
          "400": {
            "description": "Invalid company data"
          },
          "404": {
            "description": "Company not found"
          }
        }
      }
    },
    "/api/Contact": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Retrieve all contact requests.",
        "description": "This endpoint returns the complete list of contact requests.\r\nAccessible only to administrators.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create a new contact request.",
        "requestBody": {
          "description": "Object containing the details of the contact request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Contact/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Retrieve a contact request by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact request.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Update an existing contact request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact request to be updated.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Object containing the updated information of the contact request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Delete a contact request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the contact request to be deleted.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/News": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Retrieve all news.\r\nAccessible only to users with the \"Admin\" role.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Add a new news item.\r\nAccessible only to users with the \"Admin\" role.",
        "requestBody": {
          "description": "The news data to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/News/{id}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Retrieve a specific news item by ID.\r\nAccessible only to users with the \"Admin\" role.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the news item to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "News"
        ],
        "summary": "Update an existing news item.\r\nAccessible only to users with the \"Admin\" role.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the news item to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated news data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "News"
        ],
        "summary": "Delete a news item.\r\nAccessible only to users with the \"Admin\" role.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the news item to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/News/{newsId}/upload-photo1": {
      "post": {
        "tags": [
          "News"
        ],
        "parameters": [
          {
            "name": "newsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Upload file",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          }
        }
      }
    },
    "/api/News/photos": {
      "delete": {
        "tags": [
          "News"
        ],
        "summary": "Delete a photo from a news item.\r\nAccessible only to users with the \"Admin\" role.",
        "requestBody": {
          "description": "The URL of the photo to delete.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve all products.",
        "description": "Fetches a list of all available products in the system.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Add a new product to the system.",
        "requestBody": {
          "description": "The product information to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve a specific product by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the product.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update an existing product's information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated product information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the product to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Products/{productId}/upload-photo": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Upload a photo for a specific product.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The ID of the product to associate the photo with.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Upload file",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          }
        }
      }
    },
    "/api/Products/photos": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a photo from a product using its URL.",
        "requestBody": {
          "description": "The URL of the photo to delete.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Solutions": {
      "get": {
        "tags": [
          "Solutions"
        ],
        "summary": "Retrieve all solutions.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Solutions/GetSolutionById/{id}": {
      "get": {
        "tags": [
          "Solutions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Solutions/AddSolution": {
      "post": {
        "tags": [
          "Solutions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Solutions/AddProductsToSolution": {
      "post": {
        "tags": [
          "Solutions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductsToSolutionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductsToSolutionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductsToSolutionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Solutions/{solutionId}/upload-photo": {
      "post": {
        "tags": [
          "Solutions"
        ],
        "summary": "Upload a photo for a specific solution.",
        "parameters": [
          {
            "name": "solutionId",
            "in": "path",
            "description": "The ID of the solution to associate the photo with.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Upload file",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          }
        }
      }
    },
    "/api/Solutions/{id}": {
      "put": {
        "tags": [
          "Solutions"
        ],
        "summary": "Updates an existing solution.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The solution data to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Solutions"
        ],
        "summary": "Delete a solution by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Solutions/photos": {
      "delete": {
        "tags": [
          "Solutions"
        ],
        "summary": "Delete a photo from a product using its URL.",
        "requestBody": {
          "description": "The URL of the photo to delete.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User registration.",
        "description": "This endpoint creates a new user by providing a full name, email, and password.\r\nThe password is encrypted before being saved to the database.",
        "requestBody": {
          "description": "The information of the user to register.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User authentication.",
        "description": "This endpoint allows a user to log in by providing their email and password.\r\nThe password is compared with the one stored in the database.",
        "requestBody": {
          "description": "The login information of the user.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve a user by their ID.",
        "description": "This endpoint returns the detailed information of a specific user.\r\nAccessible only by administrators.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update a user.",
        "description": "Allows updating the information of an existing user.\r\nEnsure that the ID matches the one provided in the request body.\r\nAccessible only by administrators.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated information of the user.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user.",
        "description": "Deletes an existing user by their ID.\r\nAccessible only by administrators.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve all users.",
        "description": "Returns the complete list of users registered in the system.\r\nAccessible only by administrators.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/{id}/role/{roleName}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Check if a user belongs to a role.",
        "description": "Checks if a user has a specific role.\r\nAccessible only by administrators.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "The name of the role to check.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/roles": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve all roles.",
        "description": "Returns the list of roles available in the system.\r\nAccessible only by administrators.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddProductsToSolutionDto": {
        "type": "object",
        "properties": {
          "solutionID": {
            "type": "integer",
            "format": "int32"
          },
          "productIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Category": {
        "type": "object",
        "properties": {
          "categoryID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyInformation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyLogoUrl": {
            "type": "string",
            "nullable": true
          },
          "companyAddress": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "contactPersonName": {
            "type": "string",
            "nullable": true
          },
          "contactPersonPosition": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "businessLicenseCode": {
            "type": "string",
            "nullable": true
          },
          "facebookUrl": {
            "type": "string",
            "nullable": true
          },
          "twitterUrl": {
            "type": "string",
            "nullable": true
          },
          "linkedInUrl": {
            "type": "string",
            "nullable": true
          },
          "instagramUrl": {
            "type": "string",
            "nullable": true
          },
          "youtubeUrl": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ContactMessage": {
        "type": "object",
        "properties": {
          "contactID": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumbre": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewsDto": {
        "type": "object",
        "properties": {
          "newsID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDto": {
        "type": "object",
        "properties": {
          "productID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "categoryID": {
            "type": "integer",
            "format": "int32"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "specifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecificationDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Role": {
        "type": "object",
        "properties": {
          "roleID": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SolutionDto": {
        "type": "object",
        "properties": {
          "solutionID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpecificationDto": {
        "type": "object",
        "properties": {
          "specificationID": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "roleID": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please enter JWT with Bearer in front of the token",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}